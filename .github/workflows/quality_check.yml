name: Code Quality Check

on:
  push:
    branches:
      - main
      - develop
      - hotfix/*
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  quality-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Rewrite private git URLs with PAT
        run: |
          git config --global url."https://${GH_PAT}@github.com/".insteadOf "https://github.com/"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Install dependencies
        run: flutter pub get

      - name: Check formatting
        run: |
          dart format --output=none --set-exit-if-changed .
          if [[ $? -ne 0 ]]; then
            echo "::error::Code is not properly formatted. Run 'dart format .' to fix."
            exit 1
          fi

      - name: Check for unapplied fixes
        run: |
          dart fix --dry-run | tee dart_fix_output.txt
          if grep -q "has fixes" dart_fix_output.txt; then
            echo "::error::There are unapplied fixes. Run 'dart fix --apply' to fix them."
            exit 1
          fi

      - name: Check for outdated dependencies
        run: |
          cp pubspec.yaml pubspec_original.yaml
          flutter pub upgrade --major-versions
          if ! diff -q pubspec.yaml pubspec_original.yaml > /dev/null; then
            echo "::error::Dependencies are not up-to-date. Run 'flutter pub upgrade --major-versions'."
            exit 1
          fi

      - name: Static analysis
        run: flutter analyze

      - name: Ensure pubspec.lock is up to date
        run: |
          git diff --exit-code pubspec.lock || {
            echo "::error::pubspec.lock is out of sync with pubspec.yaml. Run 'flutter pub get'."
            exit 1
          }
